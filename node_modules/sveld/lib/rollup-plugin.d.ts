import { WriteTsDefinitionsOptions } from "./writer/writer-ts-definitions";
import { WriteJsonOptions } from "./writer/writer-json";
import { WriteMarkdownOptions } from "./writer/writer-markdown";
import { ParsedComponent } from "./ComponentParser";
import { ParsedExports } from "./parse-exports";
export interface PluginSveldOptions {
    glob?: boolean;
    types?: boolean;
    typesOptions?: Partial<Omit<WriteTsDefinitionsOptions, "inputDir">>;
    json?: boolean;
    jsonOptions?: Partial<Omit<WriteJsonOptions, "inputDir">>;
    markdown?: boolean;
    markdownOptions?: Partial<WriteMarkdownOptions>;
}
declare type ComponentModuleName = string;
export interface ComponentDocApi extends ParsedComponent {
    filePath: string;
    moduleName: string;
}
export declare type ComponentDocs = Map<ComponentModuleName, ComponentDocApi>;
export default function pluginSveld(opts?: PluginSveldOptions): {
    name: string;
    buildStart(): void;
    generateBundle(): Promise<void>;
    writeBundle(): void;
};
interface GenerateBundleResult {
    exports: ParsedExports;
    components: ComponentDocs;
}
export declare function generateBundle(input: string, glob: boolean): Promise<{
    exports: Record<string, {
        source: string;
        default: boolean;
        mixed?: boolean | undefined;
    }>;
    components: ComponentDocs;
}>;
export declare function writeOutput(result: GenerateBundleResult, opts: PluginSveldOptions, input: string): void;
export {};
